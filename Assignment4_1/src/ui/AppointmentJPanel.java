/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import javax.swing.JOptionPane;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.VitalSigns;

/**
 *
 * @author sonal
 */
public class AppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AppointmentJPanel
     */
    PersonDirectory persons;
    PatientDirectory patientDirectory;
    public AppointmentJPanel(PersonDirectory persons,PatientDirectory patientDirectory) {
        initComponents();
        visiblity(false);
        this.persons=persons;
        this.patientDirectory=patientDirectory;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPatientId = new javax.swing.JTextField();
        btnSearchPatient = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblAppointmentDate = new javax.swing.JLabel();
        lblPulseRate = new javax.swing.JLabel();
        lblBloodPressure = new javax.swing.JLabel();
        appointmentDate = new com.toedter.calendar.JDateChooser();
        txtPulseRate = new javax.swing.JTextField();
        txtBloodPressure = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Make Appointment");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please Enter Your Patient Id :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtPatientId.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnSearchPatient.setFont(new java.awt.Font("Arial Black", 1, 10)); // NOI18N
        btnSearchPatient.setText("Search");
        btnSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchPatientActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Please Enter the Following Details To Schedule Appointment");

        lblAppointmentDate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblAppointmentDate.setText("Appointment Date :");

        lblPulseRate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPulseRate.setText("Pulse Rate :");

        lblBloodPressure.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblBloodPressure.setText("Blood Pressure :");

        btnSave.setFont(new java.awt.Font("Arial Black", 1, 10)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(appointmentDate, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(txtPulseRate)
                            .addComponent(txtBloodPressure)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAppointmentDate)
                            .addComponent(jLabel3)
                            .addComponent(lblPulseRate)
                            .addComponent(lblBloodPressure)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(btnSearchPatient))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(btnSave)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jLabel3)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAppointmentDate)
                    .addComponent(appointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPulseRate)
                    .addComponent(txtPulseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchPatientActionPerformed
        if(txtPatientId.getText().trim().isEmpty()|| txtPatientId.getText()==null)
        {
            JOptionPane.showMessageDialog(this,"Please Enter Patient Id");
            return;
        }
        boolean patientAvailable=false;
        for(var person : persons.getPersonDirectory())
        {
            if(person.getPatientId()==Integer.parseInt(txtPatientId.getText()))
            {
                patientAvailable=true;
                visiblity(true);
            }
        }
        if(!patientAvailable)
        {
            JOptionPane.showMessageDialog(this,"Patient with this id does not exist ."
                    + "Please register before taking appointment");
        }
    }//GEN-LAST:event_btnSearchPatientActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try{
        VitalSigns vitalSigns=new VitalSigns();
        vitalSigns.setPulseRate(Integer.parseInt(txtPulseRate.getText()));
        vitalSigns.setBloodPressure(Integer.parseInt(txtBloodPressure.getText()));
        vitalSigns.setDateForTakingVitalSigns(new Date());
        Encounter encounter=new Encounter();
        Map<Date,VitalSigns> patientEncounter=new HashMap<>();
        patientEncounter.put(appointmentDate.getDate(),vitalSigns);
        encounter.setPatientEncounter(patientEncounter);
        if(patientDirectory.getPatients().size()>0)
        {
            boolean patientPresent=false;
            for(Patient patient:patientDirectory.getPatients())
            {
                if(patient.getPatient().containsKey(Integer.parseInt(txtPatientId.getText())))
                {
                  patientPresent=true;
                  var a = patient.getPatient().get(Integer.parseInt(txtPatientId.getText()));
                  a.setPatientEncounterHistory(encounter); 
                  patientDirectory.getPatients().remove(a);
                  patientDirectory.setPatients(patient);
                }
            }
            if(!patientPresent)
            {
                EncounterHistory patientHistory=new EncounterHistory();
                patientHistory.setPatientEncounterHistory(encounter);
                Map<Integer,EncounterHistory> newPatientHistory=new HashMap<>();
                newPatientHistory.put(Integer.parseInt(txtPatientId.getText()),patientHistory);
                Patient patient=new Patient();
                patient.setPatient(newPatientHistory);
                patientDirectory.setPatients(patient);
            }
        }
        else
        {
                EncounterHistory patientHistory=new EncounterHistory();
                patientHistory.setPatientEncounterHistory(encounter);
                Map<Integer,EncounterHistory> newPatientHistory=new HashMap<>();
                newPatientHistory.put(Integer.parseInt(txtPatientId.getText()),patientHistory);
                Patient patient=new Patient();
                patient.setPatient(newPatientHistory);
                patientDirectory.setPatients(patient);
        }
        JOptionPane.showMessageDialog(this,"Appointment Made Successfully");
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Error Occured.Appointment Could not be made");
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser appointmentDate;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAppointmentDate;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblPulseRate;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPulseRate;
    // End of variables declaration//GEN-END:variables

    private void visiblity(boolean value) {
        jLabel3.setVisible(value);
        lblAppointmentDate.setVisible(value);
        appointmentDate.setVisible(value);
        lblPulseRate.setVisible(value);
        txtPulseRate.setVisible(value);
        lblBloodPressure.setVisible(value);
        txtBloodPressure.setVisible(value);
        btnSave.setVisible(value);        
    }
}
