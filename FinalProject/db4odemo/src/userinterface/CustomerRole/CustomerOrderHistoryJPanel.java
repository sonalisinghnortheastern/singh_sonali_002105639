/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.EcoSystem;
import Business.WorkQueue.PlaceOrderWorkRequest;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sonal
 */
public class CustomerOrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderHistoryJPanel
     */
    private final EcoSystem system;
    public CustomerOrderHistoryJPanel(EcoSystem system) {
        initComponents();
        this.system=system;
        populateOrderHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JOrderHistory = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setBackground(new java.awt.Color(240, 178, 62));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER HISTORY");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);

        JOrderHistory.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JOrderHistory.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        JOrderHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "RESTAURANT NAME", "ORDER DATE", "STATUS", "DELIVERY DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JOrderHistory);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 209, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
        private void populateOrderHistory()
        {   DefaultTableModel model = (DefaultTableModel) JOrderHistory.getModel();
            model.setRowCount(0);
            //int uniqueId=system.getLogInUser().getLogInId();
            for(PlaceOrderWorkRequest workRequest:system.getWorkQueue().getWorkRequestList())
            {
                if(workRequest.getCustomer().getUniqueId()==123)
                {
                     Object[] row = new Object[4];
                    row[0] = workRequest.getRestaurant().getName();
                    row[1] = workRequest.getRequestDate();
                    row[2] = workRequest.getStatus();
                    if(workRequest.getResolveDate()==null)
                    {
                        row[3]="Not yet Delivered";
                    }
                    else{
                        row[3] = workRequest.getResolveDate();
                    }
                    model.addRow(row);
                }
                   
            }

        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JOrderHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
