

package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author  raunak
 */
public class CustomerProfileUpdateJPanel extends javax.swing.JPanel {

    
   private final EcoSystem system;
   boolean validateNullOrEmpty=true;
    boolean validateRegex=true;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public CustomerProfileUpdateJPanel(EcoSystem system) {
        initComponents();
        txtPassword.setVisible(false);
        this.system = system;
        onload();
    }
    
       /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtMobileNumber = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblMobileNumber = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        btnUpdateRestaurantProfile = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 102, 102));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setBackground(new java.awt.Color(240, 178, 62));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PROFILE");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);

        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAddress.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtMobileNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtUsername.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblName.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblName.setText("NAME :");
        lblName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblMobileNumber.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lblMobileNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblMobileNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMobileNumber.setText("MOBILE NUMBER :");
        lblMobileNumber.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblUsername.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("USERNAME :");
        lblUsername.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblAddress.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 255, 255));
        lblAddress.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddress.setText("ADDRESS :");
        lblAddress.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnUpdateRestaurantProfile.setBackground(new java.awt.Color(240, 178, 62));
        btnUpdateRestaurantProfile.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        btnUpdateRestaurantProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateRestaurantProfile.setText("UPDATE PROFILE");
        btnUpdateRestaurantProfile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdateRestaurantProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRestaurantProfileActionPerformed(evt);
            }
        });

        txtPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnUpdateRestaurantProfile)
                .addGap(139, 139, 139))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(53, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMobileNumber))))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMobileNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(46, 46, 46))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(btnUpdateRestaurantProfile)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(194, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateRestaurantProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRestaurantProfileActionPerformed
        try{
            if(validateNullOrEmpty()){
                if(validateFields()){
           int uniqueId=system.getLogInUser().getLogInId();
           int selectedRowIndex=0;
           selectedRowIndex = system.getCustomerDirectory().getCustomers().stream().filter(customer -> (customer.getUniqueId()!=uniqueId)).map(_item -> 1).reduce(selectedRowIndex, Integer::sum);
            Customer customer=new Customer(txtName.getText(),txtAddress.getText(),Long.parseLong(txtMobileNumber.getText()),txtUsername.getText(),txtPassword.getText(),uniqueId);
            for(UserAccount userAccount:system.getUserAccountDirectory().getUserAccountList())
            {
                if(txtUsername.getText().equals(userAccount.getUsername()))
                {
                    if(uniqueId != userAccount.getUniqueId())
                    {
                        JOptionPane.showMessageDialog(this, "Username already taken.Please take a diffrent username");
                        return;
                    }
                }
            }
            system.getCustomerDirectory().getCustomers().set(selectedRowIndex, customer);
            int index=0;
            for(UserAccount userAccount:system.getUserAccountDirectory().getUserAccountList())
            {
                    if(uniqueId == userAccount.getUniqueId())
                    {
                        system.getUserAccountDirectory().getUserAccountList().set(index, customer);
                    }
                    else{
                        index++;
                    }
            }
            dB4OUtil.storeSystem(system);
            JOptionPane.showMessageDialog(null, "User Updated Succesfully");
                }
                else{
                    JOptionPane.showMessageDialog(this, "Validation Failed .Please check the red boxes");
                validateNullOrEmpty=true;
                validateRegex=true;
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Validation Failed .Please check the red boxes");
                validateNullOrEmpty=true;
                validateRegex=true;
            }
    }
    catch(Exception e)
    {
        validateNullOrEmpty=true;
        validateRegex=true;
        throw e;
    }
    }//GEN-LAST:event_btnUpdateRestaurantProfileActionPerformed
    private void onload()
    {
        try {
              int uniqueId=system.getLogInUser().getLogInId();
                for (Customer customer : system.getCustomerDirectory().getCustomers()) {
                   if(customer.getUniqueId()==uniqueId)
                   {
                       txtName.setText(customer.getName());
                       txtAddress.setText(customer.getAddress());
                       txtMobileNumber.setText(String.valueOf(customer.getMobileNumber()));
                       txtUsername.setText(customer.getUsername());
                       txtPassword.setText(customer.getPassword());

                   }
            
                }
        } catch (Exception e) {
            throw e;
        }
       
    }
       private  boolean validateNullOrEmpty()
    {
        validateNullOrEmpty=true;
        if(txtName.getText().trim().isEmpty() || txtName.getText()==null)
        {
            validateNullOrEmpty=false;
            txtName.setToolTipText("Please Enter a Name");
            txtName.setBorder(BorderFactory.createLineBorder(Color.red,1));
        }
        if(!txtName.getText().trim().isEmpty() && txtName.getText()!=null)
        {
            txtName.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        }
        if(txtAddress.getText().trim().isEmpty() || txtAddress.getText()==null)
        {
            txtAddress.setToolTipText("Please Enter a Location");
            validateNullOrEmpty=false;
            txtAddress.setBorder(BorderFactory.createLineBorder (Color.red));
        }
        if(!txtAddress.getText().trim().isEmpty() && txtAddress.getText()!=null)
        {
            txtAddress.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        }
        if(txtMobileNumber.getText().trim().isEmpty() || txtMobileNumber.getText()==null)
        {
            txtMobileNumber.setToolTipText("Please Enter a Contact");
            validateNullOrEmpty=false;
            txtMobileNumber.setBorder(BorderFactory.createLineBorder (Color.red));
        }
        if(!txtMobileNumber.getText().trim().isEmpty() && txtMobileNumber.getText()!=null)
        {
            txtMobileNumber.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        }
        if(txtUsername.getText().trim().isEmpty() || txtUsername.getText()==null)
        {
            txtUsername.setToolTipText("Please Enter a Username");
            validateNullOrEmpty=false;
            txtUsername.setBorder(BorderFactory.createLineBorder (Color.red));
        }
        if(!txtUsername.getText().trim().isEmpty() && txtUsername.getText()!=null)
        {
            txtUsername.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        }
        return  validateNullOrEmpty;
    }
    private  boolean  validateFields()
    {
        validateRegex=true;
        if(!txtMobileNumber.getText().matches("\\b\\d+\\b"))
        {
            validateRegex=false;
            txtMobileNumber.setToolTipText("Please Enter Only Numbers");
            txtName.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
            txtMobileNumber.setBorder(BorderFactory.createLineBorder (Color.red));
        }
        if(txtMobileNumber.getText().matches("\\b\\d+\\b"))
        {
            txtMobileNumber.setBorder(UIManager.getLookAndFeel().getDefaults().getBorder("TextField.border"));
        }
        return validateRegex;
    }      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateRestaurantProfile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblMobileNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    
}
